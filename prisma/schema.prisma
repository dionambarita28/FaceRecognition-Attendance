// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CatatanAbsensi {
  id                Int      @id @default(autoincrement())
  timestamp_absensi DateTime
  status            String
  createdAt         DateTime @default(now())
  karyawanId        Int
  karyawan          Karyawan @relation(fields: [karyawanId], references: [id], onDelete: Cascade)

  @@map("CatatanAbsensi")
}

model Karyawan {
  id              Int      @id @default(autoincrement())
  nama            String
  nip             String   @unique
  foto_filename   String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  face_embedding  String?
  email           String   @unique
  password        String
  
  // Relasi
  catatanAbsensi  CatatanAbsensi[]
  absensiHarian   AbsensiHarian[]

  @@map("Karyawan")
}

// Model baru untuk absensi harian
model AbsensiHarian {
  id          Int      @id @default(autoincrement())
  karyawanId  Int
  tanggal     DateTime @db.Date
  jamMasuk    String?  // Format "HH:MM:SS"
  jamKeluar   String?  // Format "HH:MM:SS" 
  status      String   @default("absen") // 'hadir', 'telat', 'absen'
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relasi ke tabel Karyawan
  karyawan    Karyawan @relation(fields: [karyawanId], references: [id], onDelete: Cascade)

  // Constraint: satu record per karyawan per hari
  @@unique([karyawanId, tanggal], name: "karyawan_tanggal_unique")
  @@map("AbsensiHarian")
}

// Model admin yang di-comment karena masalah privileges
// Uncomment jika diperlukan dan sudah fix masalah privileges
// model admin {
//   id       Int     @id @default(autoincrement())
//   username String? @unique
//   password String?
// }